@page "/personificacion"
@using Edenmao.Core.DTOs.Personificacion
@using Edenmao.UI.Frontend.Prueba
@using Edenmao.UI.Frontend.Services
@inject PersonificacionesServices personificacionServices;
@inject NavigationManager navigation
@inject IJSRuntime JSRuntime
@inject HttpClient Http

<PageTitle>Persofinicacion</PageTitle>

<h1>Persofinicacion</h1>

<button class="btn btn-success" @onclick="CrearPersonificacion">Agregar Artículo</button>

@if (personificacions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Drescripcion</th>
                <th>Precio</th>
                <th>Fecha De Registro</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var personificacion in personificacions)
            {
                <tr>
                    <td>@personificacion.Nombre</td>
                    <td>@personificacion.Descripcion</td>
                    <td>@personificacion.Precio</td>
                    <td>@personificacion.FechaRegistro</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditarPersonificacion(personificacion.Id)">Editar</button>
                        <button class="btn btn-danger" @onclick="() => EliminarPersofinicacion(personificacion.Id)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<Personificacionp> personificacions;

    protected override async Task OnInitializedAsync()
    {
        personificacions = await personificacionServices.GetAllPersonificacion();
    }

    private void CrearPersonificacion()
    {
        navigation.NavigateTo("/CrearPresonificacion");
    }

    private void EditarPersonificacion(int id)
    {
        try
        {
            navigation.NavigateTo($"/EditarPersonificacion/{id}");
        }
        catch (Exception ex)
        {
            JSRuntime.InvokeVoidAsync("alert", $"Error al navegar a la página de edición: {ex.Message}");
        }
    }
    private async Task EliminarPersofinicacion(int id)
    {
        await personificacionServices.DeletePersonificaciones(id);
        personificacions = await personificacionServices.GetAllPersonificacion();
    }

}
