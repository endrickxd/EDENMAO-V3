@page "/personificacion/create"
@using Edenmao.Core.DTOs
@using Edenmao.Core.DTOs.Personificacion
@using Edenmao.UI.Frontend.Services
@inject PersonificacionServices personificacionservices
@inject NavigationManager Navigation

<link href="~/css/app.css" rel="stylesheet" />
<link href="~/css/bootstrap/bootstrap.min.css" rel="stylesheet" />

<div class="container">
    <h3>Crear</h3>
    <hr />

    <EditForm Model="personificacion" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator/>

        <div class="form-group">
            <label for="Nombre">Nombre</label>
            <InputText id="Nombre" class="form-control" @bind-Value="personificacion.Nombre" />
            <ValidationMessage For="@(() => personificacion.Nombre)" />
        </div>

        <div class="form-group">
            <label for="Descripcion">Descripcion</label>
            <InputText id="Descripcion" class="form-control" @bind-Value="personificacion.Descripcion" />
            <ValidationMessage For="@(() => personificacion.Descripcion)" />
        </div>

        <div class="form-group">
            <label for="precio">Precio</label>
            <InputDate id="precio" class="form-control" @bind-Value="personificacion.FechaRegistro" />
            <ValidationMessage For="@(() => personificacion.FechaRegistro)" />
        </div>
        <div class="form-group">
            <label for="fecha">Fecha de Registro</label>
            <InputDate id="fecha" class="form-control" @bind-Value="personificacion.FechaRegistro" />
            <ValidationMessage For="@(() => personificacion.FechaRegistro)" />
        </div>

        <div class="button-container">
            <button type="submit" class="btn btn-success">Registrar Datos</button>
            <button class="btn-back" @onclick="Volver">Volver</button>
        </div>

    </EditForm>

    @if (!string.IsNullOrEmpty(Mensaje))
    {
        <div class="alert alert-success mt-3">@Mensaje</div>
    }

</div>

@code {
    private PersonificacionDTO personificacion = new PersonificacionDTO();
    private string Mensaje;

    private async Task HandleValidSubmit()
    {
        await personificacionservices.CreatePersonificaciones(personificacion);
        Mensaje = "¡Datos de la Personificacion Guardados de Manera Satisfactoria!";
    }
    private void Volver()
    {
        Navigation.NavigateTo("/personificacion");
    }
}
