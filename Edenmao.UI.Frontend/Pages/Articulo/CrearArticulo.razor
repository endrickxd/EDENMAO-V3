@page "/articulo/create"
@using Edenmao.Core.DTOs
@using Edenmao.Core.DTOs.Articulo
@using Edenmao.Core.DTOs.Categoria
@using Edenmao.UI.Frontend.Services
@inject ArticuloServices articuloservices
@inject NavigationManager Navigation

<link href="~/css/app.css" rel="stylesheet" />
<link href="~/css/bootstrap/bootstrap.min.css" rel="stylesheet" />

<div class="container">
    <h3>Crear</h3>
    <hr />

    <EditForm Model="articulo" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="Nombre">Nombre</label>
            <InputText id="Nombre" class="form-control" @bind-Value="articulo.Nombre"/>
            <ValidationMessage For="@(() => articulo.Nombre)" />
        </div>

        <div class="form-group">
            <label for="Descripcion">Descripcion</label>
            <InputText id="Descripcion" class="form-control" @bind-Value="articulo.Descripcion" />
            <ValidationMessage For="@(() => articulo.Descripcion)" />
        </div>
        <div class="form-group">
            <label for="precio">Precio</label>
            <InputNumber id="precio" class="form-control" @bind-Value="articulo.Precio" />
            <ValidationMessage For="@(() => articulo.Precio)" />
        </div>

        <div class="form-group">
            <label for="stock">Stock</label>
            <InputNumber id="stock" class="form-control" @bind-Value="articulo.Stock" />
            <ValidationMessage For="@(() => articulo.Stock)" />
        </div>

        <div class="form-group">
            <label for="categoria">Categoria</label>
            <InputSelect id="categoria" class="form-control" @bind-Value="articulo.IdCategoria">
                <option value="">------SELECCIONE LA CATEGORIA------</option>
                @foreach (var categoria in categoria)
                {
                    <option value="@categoria.Id">@categoria.Nombre</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => articulo.NombreCategoria)" />
        </div>

        <div class="button-container">
            <button type="submit" class="btn btn-success">Registrar Datos</button>
            <button class="btn-back" @onclick="Volver">Volver</button>
        </div>

    </EditForm>

    @if (!string.IsNullOrEmpty(Mensaje))
    {
        <div class="alert alert-success mt-3">@Mensaje</div>
    }

</div>

@code {
    private ArticuloDTO articulo = new ArticuloDTO();
    private List<CategoriaDTO> categoria = new List<CategoriaDTO>();
    private string Mensaje;

    // protected override async Task OnInitializedAsync()
    // {
    //     articulo = (await articuloservices.GetAllCategoria()).ToList();
    // }

    private async Task HandleValidSubmit()
    {
        await articuloservices.CreateArticulos(articulo);
        Mensaje = "¡Datos del articulo Guardados de Manera Satisfactoria!";
    }
    private void Volver()
    {
        Navigation.NavigateTo("/articulos");
    }
}
