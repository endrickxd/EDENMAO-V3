@page "/categoria/create"
@using Edenmao.UI.Frontend.Modals
@using Edenmao.UI.Frontend.Services
@inject CategoriaServices categoriaservices
@inject NavigationManager Navigation

<div class="container">

    <h3><i class="fas fa-plus-circle"></i> <strong>Crear Categoría</strong></h3>
    <hr />

    <EditForm Model="categoria" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="Nombre"><i class="fas fa-tag"></i> Nombre</label>
            <InputText id="Nombre" class="form-control" @bind-Value="categoria.Nombre" />
            <ValidationMessage For="@(() => categoria.Nombre)" />
        </div>

        <div class="form-group">
            <label for="Descripcion"><i class="fas fa-align-left"></i> Descripción</label>
            <InputText id="Descripcion" class="form-control" @bind-Value="categoria.Descripcion" />
            <ValidationMessage For="@(() => categoria.Descripcion)" />
        </div>

        <div class="button-container">
            <button type="submit" class="btn btn-success">
                <i class="fas fa-save"></i> Registrar Datos
            </button>
            <button class="btn btn-secondary" @onclick="Volver">
                <i class="fas fa-arrow-left"></i> Volver
            </button>
        </div>
    </EditForm>

    @if (!string.IsNullOrEmpty(Mensaje))

    {
        <div class="alert alert-success mt-3">
            <i class="fas fa-check-circle"></i> @Mensaje
        </div>
    }

</div>



@code {
    private Categoriap categoria = new Categoriap();

    private string Mensaje;



    private async Task HandleValidSubmit()

    {

        await categoriaservices.CreateCategorias(categoria);

        Mensaje = "¡Datos de la categoría guardados de manera satisfactoria!";

        Navigation.NavigateTo("/Categorias");

    }



    private void Volver()

    {

        Navigation.NavigateTo("/Categorias");

    }
}
